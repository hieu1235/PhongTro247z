    package Utility;

import jakarta.mail.*;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeMessage;
import java.util.Date;
import java.util.Properties;

/**
 * Email utility for PhongTro247
 * Supports registration verification, forgot password, and password reset emails
 */
public final class EmailUtility {

    // Fallback defaults for local dev - DO NOT commit real credentials
    private static final String FALLBACK_FROM_EMAIL = "phongtro247z@gmail.com";
    private static final String FALLBACK_APP_PASSWORD = "rkil tmgp zhox zpdw";

    private static final String FALLBACK_RESET_FROM_EMAIL = "phongtro247z@gmail.com";
    private static final String FALLBACK_RESET_APP_PASSWORD = "rkil tmgp zhox zpdw";

    private EmailUtility() {}

    private static String getEnvOrFallback(String envKey, String fallback) {
        String v = System.getenv(envKey);
        return (v != null && !v.isBlank()) ? v : fallback;
    }

    private static Session createSession(String username, String password) {
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com");
        props.put("mail.smtp.port", "587");
        props.put("mail.smtp.ssl.protocols", "TLSv1.2");
        props.put("mail.smtp.connectiontimeout", "10000"); // 10 seconds
        props.put("mail.smtp.timeout", "10000"); // 10 seconds

        final String user = username;
        final String pass = password;
        return Session.getInstance(props, new jakarta.mail.Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(user, pass);
            }
        });
    }

    private static void sendHtmlEmail(Session session, String fromEmail, String toEmail, String subject, String htmlContent) throws MessagingException {
        if (toEmail == null || toEmail.isBlank()) {
            throw new MessagingException("Recipient email is null or blank");
        }
        
        MimeMessage message = new MimeMessage(session);
        message.setFrom(new InternetAddress(fromEmail));
        message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
        message.setSubject(subject, "UTF-8");
        message.setSentDate(new Date());
        message.setContent(htmlContent, "text/html; charset=UTF-8");
        
        Transport.send(message);
    }

    /**
     * Send registration verification email
     */
    public static void sendRegistrationVerificationEmail(String toEmail, String subject, String verificationCode) throws MessagingException {
        String from = getEnvOrFallback("PHONGTRO_EMAIL_FROM", FALLBACK_FROM_EMAIL);
        String pass = getEnvOrFallback("PHONGTRO_EMAIL_APP_PASSWORD", FALLBACK_APP_PASSWORD);

        Session session = createSession(from, pass);

        String htmlContent = "<html>"
                + "<body style='font-family: Arial, sans-serif; line-height: 1.6;'>"
                + "<div style='max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;'>"
                + "<h2 style='color: #2c3e50; text-align: center;'>PhongTro247 - X√°c nh·∫≠n ƒëƒÉng k√Ω</h2>"
                + "<p>Ch√†o b·∫°n,</p>"
                + "<p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i <strong>PhongTro247</strong>!</p>"
                + "<p>M√£ x√°c nh·∫≠n c·ªßa b·∫°n l√†: <strong style='color:#007bff; font-size:18px; background-color:#f8f9fa; padding:10px; border-radius:5px;'>" + verificationCode + "</strong></p>"
                + "<p style='color:#dc3545; font-weight:bold;'>‚ö†Ô∏è M√£ c√≥ hi·ªáu l·ª±c trong <b>10 ph√∫t</b>. Vui l√≤ng kh√¥ng chia s·∫ª m√£ n√†y v·ªõi ng∆∞·ªùi kh√°c!</p>"
                + "<hr style='border: none; border-top: 1px solid #eee; margin: 20px 0;'>"
                + "<p style='color:#6c757d; font-size:12px; text-align:center;'>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>"
                + "<p style='text-align:center;'><strong>PhongTro247 Team</strong></p>"
                + "</div>"
                + "</body>"
                + "</html>";

        sendHtmlEmail(session, from, toEmail, subject, htmlContent);
    }

    /**
     * Send forgot password verification email - overloaded method without fullName
     */
    public static void sendForgotPasswordVerificationEmail(String toEmail, String subject, String verificationCode) throws MessagingException {
        sendForgotPasswordVerificationEmail(toEmail, subject, verificationCode, null);
    }

    /**
     * Send forgot password verification email with personalized greeting
     */
    public static void sendForgotPasswordVerificationEmail(String toEmail, String subject, String verificationCode, String fullName) throws MessagingException {
        String from = getEnvOrFallback("PHONGTRO_EMAIL_FROM", FALLBACK_FROM_EMAIL);
        String pass = getEnvOrFallback("PHONGTRO_EMAIL_APP_PASSWORD", FALLBACK_APP_PASSWORD);

        Session session = createSession(from, pass);

        // Personalize greeting if fullName is provided
        String greeting = (fullName != null && !fullName.trim().isEmpty()) 
            ? "Ch√†o " + fullName.trim() + "," 
            : "Ch√†o b·∫°n,";

        String htmlContent = "<html>"
                + "<body style='font-family: Arial, sans-serif; line-height: 1.6;'>"
                + "<div style='max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;'>"
                + "<h2 style='color: #dc3545; text-align: center;'>PhongTro247 - ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>"
                + "<p>" + greeting + "</p>"
                + "<p>B·∫°n ƒë√£ y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n <strong>PhongTro247</strong>.</p>"
                + "<p>M√£ x√°c nh·∫≠n c·ªßa b·∫°n l√†: <strong style='color:#dc3545; font-size:18px; background-color:#f8f9fa; padding:10px; border-radius:5px;'>" + verificationCode + "</strong></p>"
                + "<p style='color:#dc3545; font-weight:bold;'>‚ö†Ô∏è M√£ c√≥ hi·ªáu l·ª±c trong <b>5 ph√∫t</b>. Vui l√≤ng kh√¥ng chia s·∫ª m√£ n√†y v·ªõi ng∆∞·ªùi kh√°c!</p>"
                + "<p style='color:#6c757d;'>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y v√† t√†i kho·∫£n c·ªßa b·∫°n s·∫Ω v·∫´n an to√†n.</p>"
                + "<hr style='border: none; border-top: 1px solid #eee; margin: 20px 0;'>"
                + "<p style='color:#6c757d; font-size:12px; text-align:center;'>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>"
                + "<p style='text-align:center;'><strong>PhongTro247 Team</strong></p>"
                + "</div>"
                + "</body>"
                + "</html>";

        sendHtmlEmail(session, from, toEmail, subject, htmlContent);
    }

    /**
     * Send new password after admin reset
     */
    public static void sendResetPasswordEmail(String toEmail, String subject, String newPassword) throws MessagingException {
        String from = getEnvOrFallback("PHONGTRO_RESET_EMAIL_FROM", FALLBACK_RESET_FROM_EMAIL);
        String pass = getEnvOrFallback("PHONGTRO_RESET_APP_PASSWORD", FALLBACK_RESET_APP_PASSWORD);

        Session session = createSession(from, pass);

        String htmlContent = "<html>"
                + "<body style='font-family: Arial, sans-serif; line-height: 1.6;'>"
                + "<div style='max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;'>"
                + "<h2 style='color: #28a745; text-align: center;'>PhongTro247 - M·∫≠t kh·∫©u m·ªõi</h2>"
                + "<p>Xin ch√†o,</p>"
                + "<p>Qu·∫£n tr·ªã vi√™n ƒë√£ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n <strong>PhongTro247</strong> c·ªßa b·∫°n.</p>"
                + "<p>M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n l√†: <strong style='color:#28a745; font-size: 18px; background-color:#f8f9fa; padding:10px; border-radius:5px;'>" + newPassword + "</strong></p>"
                + "<p style='color: #dc3545; font-weight:bold;'>üîí Vui l√≤ng kh√¥ng chia s·∫ª m·∫≠t kh·∫©u n√†y v·ªõi ng∆∞·ªùi kh√°c.</p>"
                + "<p style='color:#ffc107; font-weight:bold;'>‚ö° Sau khi ƒëƒÉng nh·∫≠p, h√£y ƒë·ªïi m·∫≠t kh·∫©u ngay ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n cho t√†i kho·∫£n c·ªßa b·∫°n.</p>"
                + "<p>ƒê·ªÉ ƒë·ªïi m·∫≠t kh·∫©u: ƒêƒÉng nh·∫≠p ‚Üí T√†i kho·∫£n ‚Üí ƒê·ªïi m·∫≠t kh·∫©u</p>"
                + "<hr style='border: none; border-top: 1px solid #eee; margin: 20px 0;'>"
                + "<p style='color:#6c757d; font-size:12px; text-align:center;'>ƒê√¢y l√† email t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>"
                + "<p style='text-align:center;'><strong>PhongTro247 Team</strong></p>"
                + "</div>"
                + "</body>"
                + "</html>";

        sendHtmlEmail(session, from, toEmail, subject, htmlContent);
    }

    /**
     * Backward-compatible simple send method
     */
    public static void sendEmail(String toEmail, String subject, String verificationCode) throws MessagingException {
        sendRegistrationVerificationEmail(toEmail, subject, verificationCode);
    }

    /**
     * Send welcome email after successful registration
     */
    public static void sendWelcomeEmail(String toEmail, String fullName) throws MessagingException {
        String subject = "Ch√†o m·ª´ng ƒë·∫øn v·ªõi PhongTro247!";
        String from = getEnvOrFallback("PHONGTRO_EMAIL_FROM", FALLBACK_FROM_EMAIL);
        String pass = getEnvOrFallback("PHONGTRO_EMAIL_APP_PASSWORD", FALLBACK_APP_PASSWORD);

        Session session = createSession(from, pass);

        String greeting = (fullName != null && !fullName.trim().isEmpty()) 
            ? "Ch√†o " + fullName.trim() + "," 
            : "Ch√†o b·∫°n,";

        String htmlContent = "<html>"
                + "<body style='font-family: Arial, sans-serif; line-height: 1.6;'>"
                + "<div style='max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px;'>"
                + "<h2 style='color: #28a745; text-align: center;'>Ch√†o m·ª´ng ƒë·∫øn v·ªõi PhongTro247!</h2>"
                + "<p>" + greeting + "</p>"
                + "<p>Ch√∫c m·ª´ng b·∫°n ƒë√£ ƒëƒÉng k√Ω th√†nh c√¥ng t√†i kho·∫£n t·∫°i <strong>PhongTro247</strong>!</p>"
                + "<p>T·∫°i ƒë√¢y b·∫°n c√≥ th·ªÉ:</p>"
                + "<ul style='color: #495057;'>"
                + "<li>ƒêƒÉng tin cho thu√™ ph√≤ng tr·ªç</li>"
                + "<li>Qu·∫£n l√Ω c√°c b√†i ƒëƒÉng c·ªßa m√¨nh</li>"
                + "<li>T√¨m ki·∫øm ph√≤ng tr·ªç ph√π h·ª£p</li>"
                + "<li>Li√™n h·ªá tr·ª±c ti·∫øp v·ªõi ch·ªß ph√≤ng</li>"
                + "</ul>"
                + "<p style='text-align: center; margin: 30px 0;'>"
                + "<a href='#' style='background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 12px 30px; text-decoration: none; border-radius: 8px; font-weight: bold;'>B·∫Øt ƒë·∫ßu s·ª≠ d·ª•ng</a>"
                + "</p>"
                + "<hr style='border: none; border-top: 1px solid #eee; margin: 20px 0;'>"
                + "<p style='color:#6c757d; font-size:12px; text-align:center;'>C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng PhongTro247!</p>"
                + "<p style='text-align:center;'><strong>PhongTro247 Team</strong></p>"
                + "</div>"
                + "</body>"
                + "</html>";

        sendHtmlEmail(session, from, toEmail, subject, htmlContent);
    }
}